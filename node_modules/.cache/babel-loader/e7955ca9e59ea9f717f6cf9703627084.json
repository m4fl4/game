{"ast":null,"code":"import Player from '../Player';\nimport Turno from '../Turno';\n\nclass PartidaTeste {\n  constructor() {\n    this.tipo = \"teste\";\n    this.players = [new Player(), new Player()];\n    this.players[0].setCor(\"Azul\");\n    this.players[1].setCor(\"Vermelho\");\n    this.turno = new Turno();\n    this.turno.setPlayers(this.players);\n    this.turno.inicioRandom(this.players);\n    this.turno.total[0] = 4;\n  }\n\n  setId(id) {\n    this.id = id;\n  }\n\n  getId() {\n    return this.id;\n  }\n\n  getTipo() {\n    return this.tipo;\n  }\n\n  setPlayers(players) {\n    this.players = players;\n  }\n\n  getPlayers() {\n    return this.players;\n  }\n\n  setTurno(turno) {\n    this.turno = turno;\n  }\n\n  getTurno() {\n    return this.turno;\n  }\n\n  bubbleSort(array) {\n    let len = array.length;\n\n    for (let i = 0; i < len; i++) {\n      for (let j = 0; j < len - 1; j++) {\n        let valor1 = array[j].getMissao().getPontuacao();\n        let valor2 = array[j + 1].getMissao().getPontuacao();\n\n        if (valor1 > valor2) {\n          let aux = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = aux;\n        }\n      }\n    }\n\n    return array;\n  }\n\n  estatistica() {\n    this.setPlayers(this.getTurno().getPlayers());\n    let playersOrdenados = this.bubbleSort(this.getPlayers());\n    let est = [null, null];\n\n    if (this.getTurno().getTotal()[0] == this.getTurno().getTotal()[1]) {\n      est[0] = 1;\n    }\n\n    est[1] = playersOrdenados[playersOrdenados.length - 1];\n    return est;\n  }\n\n}\n\nexport default PartidaTeste;","map":{"version":3,"sources":["/var/www/html/game/src/models/Partidas/PartidaTeste.js"],"names":["Player","Turno","PartidaTeste","constructor","tipo","players","setCor","turno","setPlayers","inicioRandom","total","setId","id","getId","getTipo","getPlayers","setTurno","getTurno","bubbleSort","array","len","length","i","j","valor1","getMissao","getPontuacao","valor2","aux","estatistica","playersOrdenados","est","getTotal"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,KAAP,MAAkB,UAAlB;;AAEA,MAAMC,YAAN,CAAmB;AAMfC,EAAAA,WAAW,GAAG;AACV,SAAKC,IAAL,GAAY,OAAZ;AACA,SAAKC,OAAL,GAAe,CAAC,IAAIL,MAAJ,EAAD,EAAe,IAAIA,MAAJ,EAAf,CAAf;AACA,SAAKK,OAAL,CAAa,CAAb,EAAgBC,MAAhB,CAAuB,MAAvB;AACA,SAAKD,OAAL,CAAa,CAAb,EAAgBC,MAAhB,CAAuB,UAAvB;AACA,SAAKC,KAAL,GAAa,IAAIN,KAAJ,EAAb;AACA,SAAKM,KAAL,CAAWC,UAAX,CAAsB,KAAKH,OAA3B;AACA,SAAKE,KAAL,CAAWE,YAAX,CAAwB,KAAKJ,OAA7B;AACA,SAAKE,KAAL,CAAWG,KAAX,CAAiB,CAAjB,IAAsB,CAAtB;AACH;;AAEDC,EAAAA,KAAK,CAACC,EAAD,EAAK;AACN,SAAKA,EAAL,GAAUA,EAAV;AACH;;AACDC,EAAAA,KAAK,GAAG;AACJ,WAAO,KAAKD,EAAZ;AACH;;AAEDE,EAAAA,OAAO,GAAG;AACN,WAAO,KAAKV,IAAZ;AACH;;AAEDI,EAAAA,UAAU,CAACH,OAAD,EAAU;AAChB,SAAKA,OAAL,GAAeA,OAAf;AACH;;AACDU,EAAAA,UAAU,GAAG;AACT,WAAO,KAAKV,OAAZ;AACH;;AAEDW,EAAAA,QAAQ,CAACT,KAAD,EAAQ;AACZ,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDU,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKV,KAAZ;AACH;;AAEDW,EAAAA,UAAU,CAACC,KAAD,EAAQ;AACd,QAAIC,GAAG,GAAGD,KAAK,CAACE,MAAhB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACF,GAAf,EAAoBE,CAAC,EAArB,EAAyB;AACrB,WAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,GAAG,GAAC,CAAnB,EAAsBG,CAAC,EAAvB,EAA2B;AACvB,YAAIC,MAAM,GAAGL,KAAK,CAACI,CAAD,CAAL,CAASE,SAAT,GAAqBC,YAArB,EAAb;AACA,YAAIC,MAAM,GAAGR,KAAK,CAACI,CAAC,GAAC,CAAH,CAAL,CAAWE,SAAX,GAAuBC,YAAvB,EAAb;;AACA,YAAGF,MAAM,GAAGG,MAAZ,EAAoB;AAChB,cAAIC,GAAG,GAAGT,KAAK,CAACI,CAAD,CAAf;AACAJ,UAAAA,KAAK,CAACI,CAAD,CAAL,GAAWJ,KAAK,CAACI,CAAC,GAAC,CAAH,CAAhB;AACAJ,UAAAA,KAAK,CAACI,CAAC,GAAC,CAAH,CAAL,GAAaK,GAAb;AACH;AACJ;AACJ;;AACD,WAAOT,KAAP;AACH;;AAEDU,EAAAA,WAAW,GAAG;AAEV,SAAKrB,UAAL,CAAgB,KAAKS,QAAL,GAAgBF,UAAhB,EAAhB;AAEA,QAAIe,gBAAgB,GAAG,KAAKZ,UAAL,CAAgB,KAAKH,UAAL,EAAhB,CAAvB;AAEA,QAAIgB,GAAG,GAAG,CAAC,IAAD,EAAM,IAAN,CAAV;;AAEA,QAAG,KAAKd,QAAL,GAAgBe,QAAhB,GAA2B,CAA3B,KAAiC,KAAKf,QAAL,GAAgBe,QAAhB,GAA2B,CAA3B,CAApC,EAAmE;AAC/DD,MAAAA,GAAG,CAAC,CAAD,CAAH,GAAS,CAAT;AACH;;AAEDA,IAAAA,GAAG,CAAC,CAAD,CAAH,GAASD,gBAAgB,CAACA,gBAAgB,CAACT,MAAjB,GAAwB,CAAzB,CAAzB;AAEA,WAAOU,GAAP;AACH;;AAzEc;;AA4EnB,eAAe7B,YAAf","sourcesContent":["import Player from '../Player';\nimport Turno from '../Turno';\n\nclass PartidaTeste {\n    id;\n    tipo;\n    players;\n    turno;\n\n    constructor() {\n        this.tipo = \"teste\";\n        this.players = [new Player(), new Player()];\n        this.players[0].setCor(\"Azul\");\n        this.players[1].setCor(\"Vermelho\");\n        this.turno = new Turno();\n        this.turno.setPlayers(this.players);\n        this.turno.inicioRandom(this.players);\n        this.turno.total[0] = 4;\n    }\n\n    setId(id) {\n        this.id = id;\n    }\n    getId() { \n        return this.id;\n    }\n\n    getTipo() {\n        return this.tipo;\n    }\n\n    setPlayers(players) {\n        this.players = players;\n    }\n    getPlayers() {\n        return this.players;\n    }\n\n    setTurno(turno) {\n        this.turno = turno;\n    }\n    getTurno() {\n        return this.turno;\n    }\n\n    bubbleSort(array) {\n        let len = array.length;\n        for(let i=0; i<len; i++) {\n            for(let j=0; j<len-1; j++) {\n                let valor1 = array[j].getMissao().getPontuacao();\n                let valor2 = array[j+1].getMissao().getPontuacao();\n                if(valor1 > valor2) {\n                    let aux = array[j];\n                    array[j] = array[j+1];\n                    array[j+1] = aux;\n                }\n            }   \n        }\n        return array;\n    }\n\n    estatistica() {\n\n        this.setPlayers(this.getTurno().getPlayers());\n        \n        let playersOrdenados = this.bubbleSort(this.getPlayers());\n        \n        let est = [null,null];\n\n        if(this.getTurno().getTotal()[0] == this.getTurno().getTotal()[1]) {\n            est[0] = 1;\n        }\n\n        est[1] = playersOrdenados[playersOrdenados.length-1]\n\n        return est;\n    }\n}\n\nexport default PartidaTeste;"]},"metadata":{},"sourceType":"module"}