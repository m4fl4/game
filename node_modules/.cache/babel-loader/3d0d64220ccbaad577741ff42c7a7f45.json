{"ast":null,"code":"import Dado from '../models/Dado';\n\nclass Jogada {\n  constructor() {\n    this.dados = [];\n    this.turno = 0;\n  }\n\n  setDados(dados) {\n    this.dados = dados;\n  }\n\n  getDados() {\n    return this.dados;\n  }\n\n  setTurno(turno) {\n    this.turno = turno;\n  }\n\n  getTurno() {\n    return this.turno;\n  }\n\n  jogar() {\n    if (this.turno >= 5) {\n      return null;\n    }\n\n    this.dados.map(j => {\n      do {\n        j.jogarDado();\n      } while (j.getNumero() <= 0);\n    });\n  }\n\n  preencheDados() {\n    for (let i = 0; i < 5; i++) {\n      this.dados.push(new Dado());\n    }\n  }\n\n}\n\nexport default Jogada;","map":{"version":3,"sources":["/var/www/html/game/src/models/Jogada.js"],"names":["Dado","Jogada","constructor","dados","turno","setDados","getDados","setTurno","getTurno","jogar","map","j","jogarDado","getNumero","preencheDados","i","push"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,gBAAjB;;AAEA,MAAMC,MAAN,CAAa;AAKTC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,EAAb;AACA,SAAKC,KAAL,GAAa,CAAb;AACH;;AAEDC,EAAAA,QAAQ,CAACF,KAAD,EAAQ;AACZ,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDG,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKH,KAAZ;AACH;;AAEDI,EAAAA,QAAQ,CAACH,KAAD,EAAQ;AACZ,SAAKA,KAAL,GAAaA,KAAb;AACH;;AACDI,EAAAA,QAAQ,GAAG;AACP,WAAO,KAAKJ,KAAZ;AACH;;AAEDK,EAAAA,KAAK,GAAG;AACJ,QAAG,KAAKL,KAAL,IAAc,CAAjB,EAAoB;AAChB,aAAO,IAAP;AACH;;AACD,SAAKD,KAAL,CAAWO,GAAX,CAAeC,CAAC,IAAI;AAChB,SAAG;AACCA,QAAAA,CAAC,CAACC,SAAF;AACH,OAFD,QAEQD,CAAC,CAACE,SAAF,MAAiB,CAFzB;AAGH,KAJD;AAKH;;AAEDC,EAAAA,aAAa,GAAG;AACZ,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAAC,CAAf,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,WAAKZ,KAAL,CAAWa,IAAX,CAAgB,IAAIhB,IAAJ,EAAhB;AACH;AACJ;;AAvCQ;;AA0Cb,eAAeC,MAAf","sourcesContent":["import Dado from '../models/Dado';\n\nclass Jogada {\n\n    dados;\n    turno;\n\n    constructor() {\n        this.dados = [];\n        this.turno = 0;\n    }\n\n    setDados(dados) {\n        this.dados = dados;\n    }\n    getDados() {\n        return this.dados;\n    }\n\n    setTurno(turno) {\n        this.turno = turno;\n    }\n    getTurno() {\n        return this.turno;\n    }\n\n    jogar() {\n        if(this.turno >= 5) {\n            return null;\n        }\n        this.dados.map(j => {\n            do {\n                j.jogarDado();\n            } while(j.getNumero() <= 0);\n        })\n    }\n\n    preencheDados() {\n        for(let i=0; i<5; i++) {\n            this.dados.push(new Dado());\n        }\n    }\n}\n\nexport default Jogada;"]},"metadata":{},"sourceType":"module"}